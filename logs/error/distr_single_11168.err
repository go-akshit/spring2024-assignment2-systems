Traceback (most recent call last):
  File "/home/c-akshit/assn2/spring2024-assignment2-systems/cs336-systems/cs336_systems/distributed_comm.py", line 107, in <module>
    main()
  File "/home/c-akshit/assn2/spring2024-assignment2-systems/cs336-systems/cs336_systems/distributed_comm.py", line 97, in main
    mp.spawn(fn=distributed_demo, nprocs=args.n_procs, join=True, args=(size,
  File "/home/c-akshit/miniconda3/lib/python3.12/site-packages/torch/multiprocessing/spawn.py", line 241, in spawn
    return start_processes(fn, args, nprocs, join, daemon, start_method="spawn")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/c-akshit/miniconda3/lib/python3.12/site-packages/torch/multiprocessing/spawn.py", line 197, in start_processes
    while not context.join():
              ^^^^^^^^^^^^^^
  File "/home/c-akshit/miniconda3/lib/python3.12/site-packages/torch/multiprocessing/spawn.py", line 158, in join
    raise ProcessRaisedException(msg, error_index, failed_process.pid)
torch.multiprocessing.spawn.ProcessRaisedException: 

-- Process 3 terminated with the following error:
Traceback (most recent call last):
  File "/home/c-akshit/miniconda3/lib/python3.12/site-packages/torch/multiprocessing/spawn.py", line 68, in _wrap
    fn(i, *args)
  File "/home/c-akshit/assn2/spring2024-assignment2-systems/cs336-systems/cs336_systems/distributed_comm.py", line 42, in distributed_demo
    setup(rank=rank, world_size=n_procs, backend=backend, device=device)
  File "/home/c-akshit/assn2/spring2024-assignment2-systems/cs336-systems/cs336_systems/distributed_comm.py", line 27, in setup
    torch.cuda.set_device(rank)
  File "/home/c-akshit/miniconda3/lib/python3.12/site-packages/torch/cuda/__init__.py", line 408, in set_device
    torch._C._cuda_setDevice(device)
RuntimeError: CUDA error: invalid device ordinal
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


